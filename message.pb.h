/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5-dev */

#ifndef PB_MESSAGE_PB_H_INCLUDED
#define PB_MESSAGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _mode_e {
    mode_e_MODE_UNKNOWN = 0,
    mode_e_GAME = 1,
    mode_e_DRILL = 2,
    mode_e_WORKOUT = 3
} mode_e;

/* Struct definitions */
typedef struct _b_mode_msg {
    mode_e mode;
    int32_t drill_workout_id;
    int32_t drill_step;
    bool doubles;
    bool tie_breaker;
} b_mode_msg;

typedef struct _b_params_msg {
    int32_t level;
    int32_t speed;
    int32_t height;
    int32_t delay;
} b_params_msg;

typedef struct _b_status_msg {
    bool active;
    bool soft_fault;
    bool hard_fault;
} b_status_msg;


/* Helper constants for enums */
#define _mode_e_MIN mode_e_MODE_UNKNOWN
#define _mode_e_MAX mode_e_WORKOUT
#define _mode_e_ARRAYSIZE ((mode_e)(mode_e_WORKOUT+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define b_status_msg_init_default                {0, 0, 0}
#define b_mode_msg_init_default                  {_mode_e_MIN, 0, 0, 0, 0}
#define b_params_msg_init_default                {0, 0, 0, 0}
#define b_status_msg_init_zero                   {0, 0, 0}
#define b_mode_msg_init_zero                     {_mode_e_MIN, 0, 0, 0, 0}
#define b_params_msg_init_zero                   {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define b_mode_msg_mode_tag                      1
#define b_mode_msg_drill_workout_id_tag          2
#define b_mode_msg_drill_step_tag                3
#define b_mode_msg_doubles_tag                   4
#define b_mode_msg_tie_breaker_tag               5
#define b_params_msg_level_tag                   1
#define b_params_msg_speed_tag                   2
#define b_params_msg_height_tag                  3
#define b_params_msg_delay_tag                   4
#define b_status_msg_active_tag                  1
#define b_status_msg_soft_fault_tag              2
#define b_status_msg_hard_fault_tag              3

/* Struct field encoding specification for nanopb */
#define b_status_msg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     active,            1) \
X(a, STATIC,   SINGULAR, BOOL,     soft_fault,        2) \
X(a, STATIC,   SINGULAR, BOOL,     hard_fault,        3)
#define b_status_msg_CALLBACK NULL
#define b_status_msg_DEFAULT NULL

#define b_mode_msg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    mode,              1) \
X(a, STATIC,   SINGULAR, INT32,    drill_workout_id,   2) \
X(a, STATIC,   SINGULAR, INT32,    drill_step,        3) \
X(a, STATIC,   SINGULAR, BOOL,     doubles,           4) \
X(a, STATIC,   SINGULAR, BOOL,     tie_breaker,       5)
#define b_mode_msg_CALLBACK NULL
#define b_mode_msg_DEFAULT NULL

#define b_params_msg_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    level,             1) \
X(a, STATIC,   SINGULAR, INT32,    speed,             2) \
X(a, STATIC,   SINGULAR, INT32,    height,            3) \
X(a, STATIC,   SINGULAR, INT32,    delay,             4)
#define b_params_msg_CALLBACK NULL
#define b_params_msg_DEFAULT NULL

extern const pb_msgdesc_t b_status_msg_msg;
extern const pb_msgdesc_t b_mode_msg_msg;
extern const pb_msgdesc_t b_params_msg_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define b_status_msg_fields &b_status_msg_msg
#define b_mode_msg_fields &b_mode_msg_msg
#define b_params_msg_fields &b_params_msg_msg

/* Maximum encoded size of messages (where known) */
#define b_status_msg_size                        6
#define b_mode_msg_size                          28
#define b_params_msg_size                        44

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
